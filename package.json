{
  "name": "turoboz",
  "version": "0.0.1",
  "description": "Turoboz website",
  "babel": {
       "presets": [
           "es2015"
       ] 
  },
  "dependencies": {
    "autoprefixer": "^6.4.0",
    "autoprefixer-cli": "^1.0.0",
    "babel-cli": "^6.14.0",
    "babel-core": "^6.14.0",
    "babel-polyfill": "^6.13.0",
    "babel-preset-es2015": "^6.14.0",
    "caniuse-db": "^1.0.30000466",
    "concurrently": "^2.2.0",
    "csso": "^2.1.1",
    "google-auth-library": "^0.9.8",
    "googleapis": "^12.2.0",
    "imagemin-cli": "^3.0.0",
    "imports-loader": "^0.6.5",
    "jade": "latest",
    "jade-babel": "^5.0.0",
    "jade-cli": "latest",
    "jquery": "^3.1.0",
    "normalize.css": "^4.1.1",
    "postcss": "^5.1.2",
    "stylus": "^0.54.5",
    "uglify-js": "latest",
    "webpack": "^1.13.2"
  },
  "devDependencies": {
    "browser-sync": "^2.14.0",
    "jshint": "latest",
    "watch": "latest"
  },
  "scripts": {
    "build-deploy": "npm run build-deploy:prepare",
    "build": "npm run build:prepare",
        "build-deploy:prepare": "concurrently 'npm run build:jade'  'npm run build:styles' 'npm run build:scripts'",
            "postbuild-deploy:prepare": "npm run build:jekyll",
        "build:prepare": "concurrently 'npm run build:images' 'npm run build:jade' 'npm run build:styles' 'npm run build:scripts'",
            "build:jade": "concurrently 'npm run build:jade:includes' 'npm run build:jade:layouts'",
                "build:jade:layouts": "jade -o _layouts/  _jadefiles/layouts/*.jade",
                "build:jade:includes": "jade -o _includes/  _jadefiles/includes/*.jade",
                "postbuild:jade": "echo 'jade ready'",

            "build:styles": "npm run build:styles:compile && npm run build:styles:prefix",
                "build:styles:compile": "stylus _styles/styles --out _styles/unprefixed",
                "build:styles:prefix": "(cd _styles/unprefixed && for file in *.css; do (autoprefixer-cli -b 'ie >= 9, > 1%, last 2 versions, ios >= 7' < $file   | csso > ../../css/$file); done)", 
                "postbuild:styles": "echo 'styles ready'",

            "build:scripts": "npm run build:scripts:compile && npm run build:scripts:webpack && npm run build:scripts:uglify",
                "build:scripts:compile": "babel _scripts/es6 -d _scripts/js",
                "build:scripts:webpack": "webpack _scripts/js/site.js _scripts/webpack/site.js",
                "build:scripts:uglify": "uglifyjs -c -m -o js/site.js _scripts/webpack/site.js",
                "postbuild:scripts": "echo 'scripts ready'",

            "build:images": "concurrently 'npm run build:images:tours' 'npm run build:images:posts'",
                "build:images:posts": "POSTS_CHECKSUM_NOW=$(md5sum img/_posts/*.jpg | md5sum); POSTS_CHECKSUM_SAVED=$(cat img/_posts/.checksum); if [ \"$POSTS_CHECKSUM_NOW\" != \"$POSTS_CHECKSUM_SAVED\" ]; then echo \"$POSTS_CHECKSUM_NOW\" && echo \"$POSTS_CHECKSUM_SAVED\" && npm run build:images:posts:generate; fi",
                    "build:images:posts:generate": "concurrently 'npm run build:images:posts200px' 'npm run build:images:posts300px' 'npm run build:images:posts400px'",
                        "prebuild:images:posts:generate": "rm img/posts{2,3,4}00/* || echo 'nothing to delete' ",
                        "build:images:posts200px": "(cd img/_posts && for file in *.jpg; do (mogrify -path ../posts200 -filter Triangle -define filter:support=2 -resize 200x150^ -extent 200x150 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "build:images:posts300px": "(cd img/_posts && for file in *.jpg; do (mogrify -path ../posts300 -filter Triangle -define filter:support=2 -resize 300x225^ -extent 300x225 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "build:images:posts400px": "(cd img/_posts && for file in *.jpg; do (mogrify -path ../posts400 -filter Triangle -define filter:support=2 -resize 400x300^ -extent 400x300 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "postbuild:images:posts:generate": "md5sum img/_posts/*.jpg | md5sum > img/_posts/.checksum && echo 'posts images ready'",

                "build:images:tours": "TOURS_CHECKSUM_NOW=$(md5sum img/_tours/*.jpg | md5sum); TOURS_CHECKSUM_SAVED=$(cat img/_tours/.checksum); if [ \"$TOURS_CHECKSUM_NOW\" != \"$TOURS_CHECKSUM_SAVED\" ]; then echo \"$POSTS_CHECKSUM_NOW\" && echo \"$POSTS_CHECKSUM_SAVED\" && npm run build:images:tours:generate; fi",
                    "build:images:tours:generate": "concurrently 'npm run build:images:tours300px' 'npm run build:images:tours400px' 'npm run build:images:tours600px' 'npm run build:images:tours800px'",
                        "prebuild:images:tours:generate": "rm img/tours{3,4,6,8}00/* || echo 'nothing to delete'",
                        "build:images:tours300px": "(cd img/_tours && for file in *.jpg; do (mogrify -path ../tours300 -filter Triangle -define filter:support=2 -resize 300x225^ -extent 300x225 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "build:images:tours400px": "(cd img/_tours && for file in *.jpg; do (mogrify -path ../tours400 -filter Triangle -define filter:support=2 -resize 400x300^ -extent 400x300 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "build:images:tours600px": "(cd img/_tours && for file in *.jpg; do (mogrify -path ../tours600 -filter Triangle -define filter:support=2 -resize 600x450^ -extent 600x450 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "build:images:tours800px": "(cd img/_tours && for file in *.jpg; do (mogrify -path ../tours800 -filter Triangle -define filter:support=2 -resize 800x600^ -extent 800x600 -gravity Center -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 $file); done)", 
                        "postbuild:images:tours:generate": "md5sum img/_tours/*.jpg | md5sum > img/_tours/.checksum && echo 'tours images ready'",

            "postbuild:prepare": "npm run build:jekyll",
                "build:jekyll": "bundle exec jekyll build",

    "watch": "concurrently 'npm run watch:jekyll -s' 'npm run watch:jade -s' 'npm run watch:styles' 'npm run watch:scripts' 'npm run browser-sync'",
        "prewatch": "npm run build",

        "watch:jekyll": "bundle exec jekyll build --watch --incremental",

        "watch:jade": "concurrently 'npm run watch:jade:includes' 'npm run watch:jade:layouts'",
            "watch:jade:layouts": "jade -o _layouts/ -w _jadefiles/layouts/*.jade",
            "watch:jade:includes": "jade -o _includes/ -w  _jadefiles/includes/*.jade",

        "watch:styles": "concurrently 'npm run watch:styles:compile' 'npm run watch:styles:prefix'",
            "watch:styles:compile": "stylus -w _styles/styles --out _styles/unprefixed",
            "watch:styles:prefix": "watch 'npm run build:styles:prefix' _styles/unprefixed", 

        "watch:scripts": "concurrently 'npm run watch:scripts:compile' 'npm run watch:scripts:webpack' 'npm run watch:scripts:uglify'",
            "watch:scripts:compile": "watch 'npm run build:scripts:compile' _scripts/es6 ",
            "watch:scripts:webpack": "webpack -w _scripts/js/site.js _scripts/webpack/site.js",
            "watch:scripts:uglify": "watch 'npm run build:scripts:uglify' _scripts/js ",

    "data-update": "node _importdata.js",
        "predata-update": "rm _tours/1*.html",
        "postdata-update": "npm run build:jade && npm run build:jekyll",

    "justbuild": "npm run build:jade && npm run build:styles && npm run build:scripts && npm run build:jekyll",
    "browser-sync": "browser-sync start --server '_site' --port 3000 --files '_site/*/*' --no-open --no-notify",
    "deploy": "netlify deploy",
        "predeploy": "npm run data-update && npm run build:images && npm run build"

  },
  "author": "none23",
  "license": "MIT License",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/none23/turoboz.git"
  },
  "bugs": {
    "url": "https://github.com/none23/turoboz/issues"
  },
  "homepage": "https://github.com/none23/turoboz#readme"
}
